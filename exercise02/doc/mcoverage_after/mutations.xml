<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED'><sourceFile>RingBuffer.java</sourceFile><mutatedClass>tobemutated.RingBuffer</mutatedClass><mutatedMethod>dequeue</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><killingTest>tobemutated.RingBufferTest.testDequeue(tobemutated.RingBufferTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>RingBuffer.java</sourceFile><mutatedClass>tobemutated.RingBuffer</mutatedClass><mutatedMethod>dequeue</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><killingTest>tobemutated.RingBufferTest.testDequeue(tobemutated.RingBufferTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>RingBuffer.java</sourceFile><mutatedClass>tobemutated.RingBuffer</mutatedClass><mutatedMethod>dequeue</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><killingTest>tobemutated.RingBufferTest.testDequeue(tobemutated.RingBufferTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>RingBuffer.java</sourceFile><mutatedClass>tobemutated.RingBuffer</mutatedClass><mutatedMethod>dequeue</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><killingTest>tobemutated.RingBufferTest.testRingBufferUnderflow(tobemutated.RingBufferTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>RingBuffer.java</sourceFile><mutatedClass>tobemutated.RingBuffer</mutatedClass><mutatedMethod>dequeue</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>51</index><killingTest>tobemutated.RingBufferTest.testDequeue(tobemutated.RingBufferTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>RingBuffer.java</sourceFile><mutatedClass>tobemutated.RingBuffer</mutatedClass><mutatedMethod>enqueue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><killingTest>tobemutated.RingBufferTest.testRingBufferOverflow(tobemutated.RingBufferTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>RingBuffer.java</sourceFile><mutatedClass>tobemutated.RingBuffer</mutatedClass><mutatedMethod>enqueue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><killingTest>tobemutated.RingBufferTest.testRingBufferOverflow(tobemutated.RingBufferTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>RingBuffer.java</sourceFile><mutatedClass>tobemutated.RingBuffer</mutatedClass><mutatedMethod>enqueue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><killingTest>tobemutated.RingBufferTest.testEnqueueNull(tobemutated.RingBufferTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>RingBuffer.java</sourceFile><mutatedClass>tobemutated.RingBuffer</mutatedClass><mutatedMethod>enqueue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><killingTest>tobemutated.RingBufferTest.testEnqueueNull(tobemutated.RingBufferTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>RingBuffer.java</sourceFile><mutatedClass>tobemutated.RingBuffer</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><killingTest>tobemutated.RingBufferTest.testRingBufferInitialization(tobemutated.RingBufferTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>RingBuffer.java</sourceFile><mutatedClass>tobemutated.RingBuffer</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><killingTest>tobemutated.RingBufferTest.testRingBufferInitialization(tobemutated.RingBufferTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>RingBuffer.java</sourceFile><mutatedClass>tobemutated.RingBuffer</mutatedClass><mutatedMethod>iterator</mutatedMethod><methodDescription>()Ljava/util/Iterator;</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><killingTest>tobemutated.RingBufferTest.testRingBufferIteratorRemove(tobemutated.RingBufferTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>RingBuffer.java</sourceFile><mutatedClass>tobemutated.RingBuffer</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>tobemutated.RingBufferTest.testRingBufferInitialization(tobemutated.RingBufferTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>RingBuffer.java</sourceFile><mutatedClass>tobemutated.RingBuffer$RingBufferIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><killingTest>tobemutated.RingBufferTest.testRingBufferIteratorImproperUse(tobemutated.RingBufferTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>RingBuffer.java</sourceFile><mutatedClass>tobemutated.RingBuffer$RingBufferIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><killingTest>tobemutated.RingBufferTest.testRingBufferIteratorImproperUse(tobemutated.RingBufferTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>RingBuffer.java</sourceFile><mutatedClass>tobemutated.RingBuffer$RingBufferIterator</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><killingTest>tobemutated.RingBufferTest.testRingBufferIteratorImproperUse(tobemutated.RingBufferTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>RingBuffer.java</sourceFile><mutatedClass>tobemutated.RingBuffer$RingBufferIterator</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><killingTest>tobemutated.RingBufferTest.testRingBufferIterator(tobemutated.RingBufferTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>RingBuffer.java</sourceFile><mutatedClass>tobemutated.RingBuffer$RingBufferIterator</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><killingTest>tobemutated.RingBufferTest.testRingBufferIteratorImproperUse(tobemutated.RingBufferTest)</killingTest></mutation>
<mutation detected='true' status='KILLED'><sourceFile>RingBuffer.java</sourceFile><mutatedClass>tobemutated.RingBuffer$RingBufferIterator</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><killingTest>tobemutated.RingBufferTest.testRingBufferIterator(tobemutated.RingBufferTest)</killingTest></mutation>
</mutations>
